@model ML.Usuario
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Formulario</h2>

    <div class="row">
        <div class="col-md-12">

            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal ">
                    @*row 1*@
                    <div class="form-group">
                        <div class="row">
                            @*IdUsuario*@
                            <div class="col-3" style="display:none">
                                @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })
                                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })
                                @Html.ValidationMessageFor(model => model.IdUsuario)
                            </div>
                            @*UserName*@
                            <div class="col-3">
                                @Html.LabelFor(model => model.UserName)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-circle"></i></span>
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                            </div>

                            @*NombreUsuario*@
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Nombre)
                                <div class="input-group"> 
                                    <span class="input-group-text"><i class="bi bi-person-fill-add"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Nombre)
                                </div>
                            </div>

                            @*Apellido Paterno*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.ApellidoPaterno)
                                <div class="input-group"> 
                                    <span class="input-group-text"><i class="bi bi-person-fill-add"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                                </div>
                            </div>

                            @*Apellido Materno*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.ApellidoMaterno)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-fill-add"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                                </div>
                            </div>


                        </div>
                    </div>
                    @*row 2*@
                    <div class="form-group">
                        <div class="row">
                            @*Email*@
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Email)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-envelope-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            @*password*@
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Password)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-unlock-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                            </div>

                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Telefono)
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Telefono)
                                </div>
                            </div>


                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Celular)
                                <div class="input-group"> 
                                    <span class="input-group-text"><i class="bi bi-phone-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Celular, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Celular)
                                </div>
                            </div>

                        </div>
                    </div>

                    @*row 3*@
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.FechaNacimiento)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-check-fill"></i></span>
                                    @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id="txtFechaNacimiento"})
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento)
                                </div>
                            </div>



                             <div class="col-3">

                                @Html.LabelFor(model => model.Sexo)
                                <div class="input-group">
                                    @Html.Label("Masculino")
                                    @Html.RadioButtonFor(model => model.Sexo,"M")
                                    <div class="input-group">
                                    @Html.Label("Femenino")
                                    @Html.RadioButtonFor(model => model.Sexo,"F")

                                    @Html.ValidationMessageFor(model => model.Sexo)
                                </div>
                                </div>
                            </div>
                        
                             <div class="col-md-3">

                                @Html.LabelFor(model => model.Curp)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-clipboard-fill"></i></span>

                                    @Html.TextBoxFor(model => model.Curp, new { @class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Curp)
                                </div>
                            </div>

                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Rol.IdRol)
                                @*@Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })*@
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person-rolodex"></i></span>

                                    @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un opcion de rol", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Rol.IdRol)
                                </div>
                            </div>
                        </div>
                    </div>




                    @*Direccion Lista
                        ---Pais*@
                    <div class="form-group">

                        <div class="row">
                        @*Pais*@
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un opcion de pais", new { id = "ddlPais", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                                </div>
                            </div>

                        @*Estado*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                                
                                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleciona un estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                                    }
                                </div>
                            </div>
                        @*Municipio*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                                    @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Seleciona un municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleciona un municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                                    }

                                </div>
                            </div>
                        @*Colonia*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Direccion.Colonia)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                                    @if (Model.Direccion.Colonia.Colonias == null)
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Seleciona una colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleciona una colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                                    }

                                </div>
                            </div>
                        </div>
                    </div>


                    @* Direccion *@
                    <div class="form-group" >
                        <div class="row">

                            <div class="col-md-3" style="display :none;">

                                @Html.LabelFor(model => model.Direccion.IdDireccion, new { @class = "hidden" })
                                @Html.TextBoxFor(model => model.Direccion.IdDireccion, new { @class = "form-control hidden" })
                                @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)
                            </div>
                            @*Colonia*@

                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Direccion.Calle)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Direccion.Calle, new { id = "txtDireccion", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Direccion.Calle)
                                </div>
                            </div>

                            @*Colonia*@
                            <div class="col-md-3">

                                @Html.LabelFor(model => model.Direccion.NumeroInterior)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-0-square-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { id = "txtDireccion", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                                </div>
                            </div>

                            @*Colonia*@
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Direccion.NumeroInterior)
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-0-square-fill"></i></span>
                                    @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { id = "txtDireccion", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                                </div>
                            </div>

                            @*IMAGEN*@      
                            <div class="col-4">
                                @Html.LabelFor(model => model.Imagen)

                                <div class="input-group">    
                                    <span class="input-group-text"><i class="bi bi-card-image"></i></span>
                                    <input class="form-control" id="ImagenData" type="file" name="ImagenData" onchange="readURL(this);" />
                                </div>

                                    @if (Model.Imagen != null)
                                    {
                                        <img id="ImagenPreview" src="data:image/jpeg;base64,@Model.Imagen" style="height:120px; width:120px;" />
                                    }
                                    else
                                    {
                                        <img id="ImagenPreview" src="~/Imagen/index.jpg" style="height:120px; width:120px; " />
                                    }
                                    @Html.ValidationMessageFor(model => model.Imagen)

                            </div>
                            @Html.HiddenFor(model=>model.Imagen)
                        </div>
                    </div>


                    @* Botones *@
                    <div class="form-group">
                        <div class="row">
                            <div class="col-1">
                                <input type="submit" value="Guardar" class="btn btn-success" />
                            </div>
                            <div class="col-1">
                                
                                @Html.ActionLink("Regresar","GetAll","Usuario", htmlAttributes: new { @class = "btn btn-danger col-auto" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>




@section Scripts
{
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>

    <script type="text/javascript">
    

        $(document).ready(function () {

            //AJAX ESTADO LISTA DESPLEGABLE
            $("#ddlPais").change(function () {
                $("#ddlEstado").empty(),
                $("#ddlMunicipio").empty(),
                $("#ddlColonia").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetEstado")',
                    dataType: 'json',
                    data: { IdPais: $("#ddlPais").val() },
                    success: function (estados) {
                        $("#ddlEstado").append('<option value="0">' + 'Seleccione un estado' + '</option>');
                        $("#ddlMunicipio").append('<option value="0">' + 'Seleccione un municipio' + '</option>');
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una colonia' + '</option>');
                        $.each(estados, function (i, estados) {
                            $("#ddlEstado").append('<option value="'
                                + estados.idEstado + '">'
                                + estados.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });

            //AJAX MUNICIPIO LISTA DESPLEGABLE
            $("#ddlEstado").change(function () {
                $("#ddlMunicipio").empty(),
                $("#ddlColonia").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetMunicipio")',
                    dataType: 'json',
                    data: { IdEstado: $("#ddlEstado").val() },
                    success: function (municipios) {
                        $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una municipio' + '</option>');
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una colonia' + '</option>');
                        $.each(municipios, function (i, municipios) {
                            $("#ddlMunicipio").append('<option value="'
                                + municipios.idMunicipio + '">'
                                + municipios.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });

            //AJAX COLONIA LISTA DESPLEGABLE
            $("#ddlMunicipio").change(function () {
                $("#ddlColonia").empty(); //Limpia

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetColonia")',
                    dataType: 'json',
                    data: { IdMunicipio: $("#ddlMunicipio").val() },
                    success: function (colonias) {
                        $("#ddlColonia").append('<option value="0">' + 'Seleccione una Colonia' + '</option>');
                        $.each(colonias, function (i, colonias) {
                            $("#ddlColonia").append('<option value="'
                                //Debe de veniar el. IdColonia Como viene en la wen del ajax
                                + colonias.idColonia + '">'
                                + colonias.nombre + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
            });

        })



        //PREVISUALIZAR IMAGEN
        function readURL(input) {
            if (input.files && input.files[0])
            {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#ImagenPreview").attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        //VALIDACION DE ARCHIVO IMG

        function validateFile(){
                  var allowedExtension = ['jpeg', 'jpg'];
                  var fileExtension = document.getElementById('ImagenData').value.split('.').pop().toLowerCase();
                  var isValidFile = false;
                    for(var index in allowedExtension) {
                        if(fileExtension === allowedExtension[index]) {
                            isValidFile = true;
                            break;
                        }
                    }
                    if(!isValidFile) {
                        alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                        document.getElementById('ImagenData').value = ""
                    }
                    return isValidFile;
              }


        $(function(){
            $("#txtFechaNacimiento").datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "1950:2030"
            });
        });
    </script>
}

